specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - name: Comptroller
    kind: ethereum/contract
    network: {{network}}
    source:
      address: "{{comptroller.address}}"
      abi: Comptroller
      startBlock: {{comptroller.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappingForComptroller.ts
      entities:
        - Comptroller
      abis:
        - name: Comptroller
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/Comptroller.json
      eventHandlers:
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        # - event: DripTokenDripped(indexed address,indexed address,uint256)
        #   handler: handleDripTokenDripped
        # - event: DripTokenClaimed(indexed address,indexed address,indexed address,uint256)
        #   handler: handleDripTokenClaimed
        - event: BalanceDripActivated(indexed address,indexed address,indexed address,uint256)
          handler: handleBalanceDripActivated
        - event: BalanceDripDeactivated(indexed address,indexed address,indexed address)
          handler: handleBalanceDripDeactivated
        - event: BalanceDripRateSet(indexed address,indexed address,indexed address,uint256)
          handler: handleBalanceDripRateSet
        - event: BalanceDripDripped(indexed address,indexed address,indexed address,address,uint256)
          handler: handleBalanceDripDripped
        - event: VolumeDripActivated(indexed address,indexed address,indexed address,bool,uint256,uint256)
          handler: handleVolumeDripActivated
        - event: VolumeDripDeactivated(indexed address,indexed address,indexed address,bool)
          handler: handleVolumeDripDeactivated
        - event: VolumeDripSet(indexed address,indexed address,indexed address,bool,uint256,uint256)
          handler: handleVolumeDripSet
        - event: VolumeDripPeriodStarted(indexed address,indexed address,indexed address,bool,uint32,uint256,uint256)
          handler: handleVolumeDripPeriodStarted
        - event: VolumeDripPeriodEnded(indexed address,indexed address,indexed address,bool,uint32,uint256,uint256)
          handler: handleVolumeDripPeriodEnded
        - event: VolumeDripDripped(indexed address,indexed address,indexed address,bool,address,uint256)
          handler: handleVolumeDripDripped
  - name: CompoundPrizePoolBuilder
    kind: ethereum/contract
    network: {{network}}
    source:
      address: "{{compoundPrizePoolBuilder.address}}"
      abi: CompoundPrizePoolBuilder
      startBlock: {{compoundPrizePoolBuilder.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - CompoundPrizePoolBuilder
      abis:
        - name: PrizePool
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/PrizePool.json
        - name: CompoundPrizePool
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/CompoundPrizePool.json
        - name: PeriodicPrizeStrategy
          file: ./abis/PeriodicPrizeStrategy.json
        - name: CompoundPrizePoolBuilder
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/CompoundPrizePoolBuilder.json
        - name: ControlledToken
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/ControlledToken.json
      eventHandlers:
        - event: PrizePoolCreated(indexed address,indexed address)
          handler: handlePrizePoolCreated
      file: ./src/mappingForCompoundPrizePoolBuilder.ts
  # - name: SingleRandomWinnerBuilder
  #   kind: ethereum/contract
  #   network: {{network}}
  #   source:
  #     address: "{{singleRandomWinnerBuilder.address}}"
  #     abi: SingleRandomWinnerBuilder
  #     startBlock: {{singleRandomWinnerBuilder.startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - SingleRandomWinnerBuilder
  #     abis:
  #       - name: PrizePool
  #         file: ./node_modules/@pooltogether/pooltogether-contracts/build/PrizePool.json
  #       - name: SingleRandomWinner
  #         file: ./node_modules/@pooltogether/pooltogether-contracts/build/SingleRandomWinner.json
  #       - name: SingleRandomWinnerBuilder
  #         file: ./node_modules/@pooltogether/pooltogether-contracts/build/SingleRandomWinnerBuilder.json
  #       - name: ControlledToken
  #         file: ./node_modules/@pooltogether/pooltogether-contracts/build/ControlledToken.json
  #     eventHandlers:
  #       - event: SingleRandomWinnerCreated(indexed address,indexed address,indexed address)
  #         handler: handleSingleRandomWinnerCreated
  #     file: ./src/mappingForSingleRandomWinnerBuilder.ts
templates:
  - name: PeriodicPrizeStrategy
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: PeriodicPrizeStrategy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappingForPeriodicPrizeStrategy.ts
      entities:
        - PeriodicPrizeStrategy
        - MultipleWinners
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: PrizePool
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/PrizePool.json
        - name: MultipleWinners
          file: ./abis/MultipleWinners.json
        - name: RNGInterface
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/RNGInterface.json
        - name: Comptroller
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/Comptroller.json
        - name: PeriodicPrizeStrategy
          file: ./abis/PeriodicPrizeStrategy.json
      eventHandlers:
        - event: TokenListenerUpdated(indexed address)
          handler: handleTokenListenerUpdated
        - event: PrizePoolOpened(indexed address,indexed uint256)
          handler: handlePrizePoolOpened
        - event: PrizePoolAwardStarted(indexed address,indexed address,indexed uint32,uint32)
          handler: handlePrizePoolAwardStarted
        - event: PrizePoolAwarded(indexed address,uint256)
          handler: handlePrizePoolAwarded
        - event: RngServiceUpdated(indexed address)
          handler: handleRngServiceUpdated
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: ExternalErc20AwardAdded(indexed address)
          handler: handleExternalErc20AwardAdded
        - event: ExternalErc20AwardRemoved(indexed address)
          handler: handleExternalErc20AwardRemoved
        - event: ExternalErc721AwardAdded(indexed address,uint256[])
          handler: handleExternalErc721AwardAdded
        - event: ExternalErc721AwardRemoved(indexed address)
          handler: handleExternalErc721AwardRemoved
  - name: CompoundPrizePool
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: CompoundPrizePool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappingForCompoundPrizePool.ts
      entities:
        - CompoundPrizePool
      abis:
        - name: PrizePool
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/PrizePool.json
        - name: CompoundPrizePool
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/CompoundPrizePool.json
      eventHandlers:
        - event: CompoundPrizePoolInitialized(indexed address)
          handler: handleCompoundPrizePoolInitialized
  - name: PrizePool
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: PrizePool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappingForPrizePool.ts
      entities:
        - PrizePool
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: PrizePool
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/PrizePool.json
        - name: CompoundPrizePool
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/CompoundPrizePool.json
      eventHandlers:
        - event: Initialized(address,address,uint256,uint256)
          handler: handleInitialized
        - event: ControlledTokenAdded(indexed address)
          handler: handleControlledTokenAdded
        - event: ReserveFeeCaptured(uint256)
          handler: handleReserveFeeCaptured
        - event: LiquidityCapSet(uint256)
          handler: handleLiquidityCapSet
        - event: Deposited(indexed address,indexed address,indexed address,uint256,address)
          handler: handleDeposited
        - event: TimelockDeposited(indexed address,indexed address,indexed address,uint256)
          handler: handleTimelockDeposited
        - event: Awarded(indexed address,indexed address,uint256)
          handler: handleAwarded
        - event: AwardedExternalERC20(indexed address,indexed address,uint256)
          handler: handleAwardedExternalERC20
        - event: AwardedExternalERC721(indexed address,indexed address,uint256[])
          handler: handleAwardedExternalERC721
        - event: InstantWithdrawal(indexed address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handleInstantWithdrawal
        - event: TimelockedWithdrawal(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTimelockedWithdrawal
        - event: TimelockedWithdrawalSwept(indexed address,indexed address,uint256,uint256)
          handler: handleTimelockedWithdrawalSwept
        - event: CreditPlanSet(address,uint128,uint128)
          handler: handleCreditPlanSet
        - event: PrizeStrategySet(indexed address)
          handler: handlePrizeStrategySet
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
  - name: ControlledToken
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ControlledToken
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappingForControlledToken.ts
      entities:
        - ControlledToken
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ControlledToken
          file: ./node_modules/@pooltogether/pooltogether-contracts/build/ControlledToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
